syntax = "proto3";

package post;

option go_package = "settings_grpc/go/core/proto;postpb";

import "google/protobuf/timestamp.proto";


message Post {
  string id = 1;
  string user_id = 2;
  string title = 3;
  string content = 4;
  google.protobuf.Timestamp created_at = 5;
}

message AddPostRequest {
  string user_id = 1;
  string title = 2;
  string content = 3;
}

message AddPostResponse {
  string id = 1;
}

message GetPostRequest{
  string id = 1;
}

message GetPostResponse{
  Post post = 1;
}

message RemovePostRequest {
  string id = 1;
}

message RemovePostResponse {
  bool success = 1;
}

message GetManyPostsRequest {
  int32 limit = 1;
  int32 page = 2;
}

message GetManyPostsResponse {
  repeated Post posts = 1;
}

message GetFeedRequest {
  string user_id = 1;
  int32 limit = 2;
  int32 page = 3;
}

message GetFeedResponse {
  repeated Post posts = 1;
}

service PostService {
  rpc AddPost(AddPostRequest) returns (AddPostResponse);
  rpc RemovePost(RemovePostRequest) returns (RemovePostResponse);
  rpc GetManyPosts(GetManyPostsRequest) returns (GetManyPostsResponse);
  rpc GetFeed(GetFeedRequest) returns (GetFeedResponse);
  rpc GetPost(GetPostRequest) returns (GetPostResponse);
}

message User {
  string id = 1;
  string name = 2;
  string email = 3;
  string password = 4;
  google.protobuf.Timestamp created_at = 5;
}

message AddUserRequest {
  string name = 1;
  string email = 2;
  string password = 3;
}

message AddUserResponse {
  string id = 1;
}

message GetUserRequest{
  string id = 1;
}

message GetUserResponse{
  User user = 1;
}

service UserService {
  rpc AddUser(AddUserRequest) returns (AddUserResponse);
  rpc GetUser(GetUserRequest) returns (GetUserResponse);
}

message SubscribeRequest {
  string subscriber_id = 1;
  string subscribed_to_id = 2;
}

message SubscribeResponse {
  bool success = 1;
}

message GetSubscribersRequest {
  string user_id = 1;
  int32 limit = 2;
  int32 page = 3;
}

message GetSubscribersResponse{
  repeated User user = 1;
}

message UnsubscribeRequest {
  string subscriber_id = 1;
  string subscribed_to_id = 2;
}

message UnsubscribeResponse {
  bool success = 1;
}

service SubscriptionService {
  rpc Subscribe(SubscribeRequest) returns (SubscribeResponse);
  rpc Unsubscribe(UnsubscribeRequest) returns (UnsubscribeResponse);
  rpc GetSubscribers(GetSubscribersRequest) returns (GetSubscribersResponse);
}